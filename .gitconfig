[user]
	name = FirstName LastName
	email = my@email.com
[color]
	ui = auto
[push]
	default = simple
[core]
	editor = gedit -s
[alias]
	add-all-sm-add = "!f() { git submodule foreach \" git add . \" ; git add . ; }; f"
	addne = "!f() { git add -N $1; git add -e $1; }; f"
	addAllSb = "!f() { git add .; git status -sb; }; f"
	backupCheckout = "!f() { cp $1 $1.back; git checkout $1; }; f"
	branchvv = "!f() { git branch -vv; }; f"
	commitq = "!f() { git commit -q -m \"$1\"; }; f"
	commitqq = "!f() { git commit -q -m \"$1\" > /dev/null; }; f"
	commit-sm = "!f() { echo \"$(basename $PWD)\"; git commit -m \"$1\" || echo 'NO CHANGE' ; git submodule foreach \" git commit -m '$1' || echo 'NO CHANGE' \" ; }; f"
	commit-sm-add = "!f() { git submodule foreach \" git commitqq '$1' || echo 'NO CHANGE' \" ; echo \"$(basename $PWD)\"; git add . ; git commitqq \"$1\" || echo \"NO CHANGE\" ; }; f"
	commitAndPush = "!f() { git commit -m \"$1\"; git push; }; f"
	commitTodayUpdate-sm-add = "!f() { git commit-sm-add \"$(date +'%-B %-d update')\" ; }; f"
	commitTodayUpdateAndPush = "!f() { git commit -m \"$(date +'%-B %-d update')\"; git push; }; f"
	createNewBranchAndPush = "!f() { git checkout -b $1; git push -u origin $1; }; f"
	deleteBranchAndPush = "!f() { git branch --delete $1; git push origin --delete $1; }; f"
	diff-sm = "!f() { git diff; git submodule foreach git diff; }; f"
	diffstat = "!f() { git diff --stat; }; f"
	diffstat-sm = "!f() { git diff --stat; git submodule foreach git diff --stat; }; f"
	diffword = "!f() { git diff --word-diff; }; f"
	diffword-sm = "!f() { git diff --word-diff; git submodule foreach git diff --word-diff; }; f"
	fetchp = "!f() { git fetch -p; }; f"
	gc-sm = "!f() { git gc; git submodule foreach git gc; }; f"
	logOneLine = "!f() { git log -n 11 --oneline; }; f"
	meldBackup = "!f() { meld $1 $1.back; }; f"
	mergeFastForwardOnlyAndPush = "!f() { git merge --ff-only --no-commit $1; git push; }; f"
	pullsb = "!f() { git pull; git sb; }; f"
	pullsb-sm = "!f() { echo \"$(basename $PWD)\"; git pull; git submodule foreach git pull; git sb-sm; }; f"
	push-sm = "!f() { git submodule foreach git push; echo \"$(basename $PWD)\"; git push; }; f"
	pushorigin = "!f() { git push origin $1; }; f"
	pushorigin-sm = "!f() { echo \"$(basename $PWD)\"; git push origin $1; git submodule foreach git push origin $1; }; f"
	rmBackup = "!f() { rm $1.back; }; f"
	rmdeleted = "!f() { git rm $(git ls-files --deleted); }; f"
	stashpullpop = "!f() { git stash; git pull; git stash pop; }; f"
	stashpullpopreset = "!f() { git stash; git pull; git stash pop; git reset; }; f"
	sb = "!f() { git status -sb; }; f"
	sback = "!f() { git status -sb -- '*.back'; }; f"
	sb-sm = "!f() { echo \"$(basename $PWD)\"; git status -sb; git submodule foreach git status -sb; }; f"
	sback-sm = "!f() { git status -sb -- '*.back'; git submodule foreach git status -sb -- '*.back'; }; f"
